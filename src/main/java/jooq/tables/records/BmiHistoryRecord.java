/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import java.time.LocalDateTime;

import jooq.tables.BmiHistory;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BmiHistoryRecord extends UpdatableRecordImpl<BmiHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>bmi_history.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>bmi_history.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>bmi_history.bmi</code>.
     */
    public void setBmi(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>bmi_history.bmi</code>.
     */
    public Double getBmi() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>bmi_history.datetime</code>.
     */
    public void setDatetime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>bmi_history.datetime</code>.
     */
    public LocalDateTime getDatetime() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BmiHistoryRecord
     */
    public BmiHistoryRecord() {
        super(BmiHistory.BMI_HISTORY);
    }

    /**
     * Create a detached, initialised BmiHistoryRecord
     */
    public BmiHistoryRecord(Integer id, Double bmi, LocalDateTime datetime) {
        super(BmiHistory.BMI_HISTORY);

        setId(id);
        setBmi(bmi);
        setDatetime(datetime);
        resetTouchedOnNotNull();
    }
}
